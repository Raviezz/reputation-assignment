package com.reputation.trailing.validators;

import java.util.Set;
import java.util.StringJoiner;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Component;
import com.reputation.trailing.TrailingException;
import com.reputation.trailing.models.Trailing;


@Component("trailingValidator")
public class NAVRequestValidator implements IRequestValidator<Trailing> {

	private Logger logger = LoggerFactory.getLogger(NAVRequestValidator.class);

	
	@Override
	public Trailing validateReqParam(Trailing trail) throws TrailingException {
		StringJoiner joiner = new StringJoiner(",");
		try {
			ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
			Validator validator = factory.getValidator();
			Set<ConstraintViolation<Trailing>> violations = validator.validate(trail);
			if (!violations.isEmpty()) {
				
				for (ConstraintViolation<Trailing> violation : violations) {
					joiner.add(violation.getMessage());
				}
				logger.info("Voilations are ={}",joiner);
				throw new TrailingException(
						"Bad Request, missing  - "+joiner,HttpStatus.BAD_REQUEST.toString());
			}
		} catch (Exception e) {
			throw new TrailingException(
					"Failed to validate request - "+joiner,HttpStatus.BAD_REQUEST.toString());
		}
		return trail;
	}

}
