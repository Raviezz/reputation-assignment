package com.reputation.trailing.validators;

import java.util.Set;
import java.util.StringJoiner;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Component;
import com.reputation.trailing.TrailingException;
import com.reputation.trailing.models.Trailing;


@Component("trailingValidator")
public class NAVRequestValidator implements IRequestValidator<Trailing> {


	@Override
	public Trailing validateReqParam(Trailing trail) throws TrailingException {
		
		    try {
		      EventFeed eventFeed = mapper.readValue(new StringReader(reqData), EventFeed.class);
		      ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
		      Validator validator = factory.getValidator();
		      Set<ConstraintViolation<EventFeed>> violations = validator.validate(eventFeed);
		      if (!violations.isEmpty()) {
		        StringJoiner joiner = new StringJoiner(",");
		        for (ConstraintViolation<EventFeed> violation : violations) {
		          joiner.add(violation.getMessage());
		        }
		        throw new AppUtilException(HttpStatus.BAD_REQUEST.toString(), joiner.toString());
		      }
		      return eventFeed;
		    } catch (Exception e) {
		      throw new AppUtilException(HttpStatus.INTERNAL_SERVER_ERROR.toString(),
		          "Failed to validate request - " + e.getMessage());
		    }
	}

}
